# ******************************************************************************
# NGINX Reverse Proxy
# https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
# ******************************************************************************
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;

    # some proxy params
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;

    # How to Increase Request Timeout in NGINX
    # https://ubiq.co/tech-blog/increase-request-timeout-nginx/
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    # NGINX Content Caching
    # https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/
    # How to cache static content on NGINX
    # https://www.techrepublic.com/article/how-to-cache-static-content-on-nginx/
    

    # HTTP Load Balancing
    # https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/


    # create upstream for "one.service.web" container
    upstream docker.one.service.web {
        server one.service.web:80;
    }
    # create upstream for "two.service.web" container
    # upstream docker.two.service.web {
    #     server two.service.web:80;
    # }

    # create proxy vhost for "one.service.web" container
    server {
        listen 80;
        # Set hosts "http://one.service.web"
        server_name  one.service.web;

        location / {
            proxy_pass         http://docker.one.service.web;
            proxy_redirect     off;
        }
    }

    # create proxy vhost for "two.service.web" container
    # server {
    #     listen 80;
    #     # Set hosts "http://two.service.web"
    #     server_name  two.service.web;

    #     location / {
    #         proxy_pass         http://docker.two.service.web;
    #         proxy_redirect     off;
    #     }
    # }
}
