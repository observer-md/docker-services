version: '3.9'
# ******************************************************************************
services:
    # **************************************************************************
    # Proxy
    #
    # http://one.service.web/
    # http://two.service.web/
    # **************************************************************************
    web.proxy:
        container_name: web.proxy
        image: nginx:alpine
        ports:
            - 80:80
        volumes:
            - ./config/proxy/nginx.conf:/etc/nginx/nginx.conf
        # To start all projects at once add this section
        # depends_on:
        #     - one.service.web
        #     - two.service.web
    
    # **************************************************************************
    # Web One
    # **************************************************************************
    one.service.web:
        container_name: one.service.web
        # -------------------------------------------------------
        # Standard PHP image
        # image: php:8.0-apache
        # -------------------------------------------------------
        # Build custome PHP image on start
        build:
            context: ./
            dockerfile: ./build/apache-php/Dockerfile.Debian
        # -------------------------------------------------------
        # Use custome built PHP image (Built from ./build/apache-php/Dockerfile.Debian)
        # image: apache-php80-debian
        # -------------------------------------------------------
        # Open port if you need. But access to container goes through proxy.
        # ports:
        #     - 8081:80
        volumes:
            - ./config/apache/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
            - ./web-project-one:/var/www/html
            # Storage optional
            - ./storage:/mnt/storage

    # **************************************************************************
    # Web Two
    # **************************************************************************
    # two.service.web:
    #     container_name: two.service.web
    #     # -------------------------------------------------------
    #     # Standard PHP image
    #     # image: php:8.0-apache
    #     # -------------------------------------------------------
    #     # Build custome PHP image on start
    #     build:
    #         context: ./
    #         dockerfile: ./build/apache-php/Dockerfile.Debian
    #     # -------------------------------------------------------
    #     # Use custome built PHP image (Built from ./build/apache-php/Dockerfile.Debian)
    #     # image: apache-php80-debian
    #     # -------------------------------------------------------
    #     # Open port if you need. But access to container goes through proxy.
    #     # ports:
    #     #     - 8082:80
    #     volumes:
    #         - ./config/apache/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
    #         - ./web-project-two:/var/www/html
    #         # Storage optional
    #         - ./storage:/mnt/storage

    # **************************************************************************
    # Redis
    # **************************************************************************
    # redis.service.web:
    #     container_name: redis.service.web
    #     image: redis:6-alpine
    #     ports:
    #         - 6379:6379

    # **************************************************************************
    # MailHog. Test email service.
    # **************************************************************************
    # mailhog.service.web:
    #     container_name: mailhog.service.web
    #     image: mailhog/mailhog:latest
    #     ports:
    #         - 1025:1025
    #         - 8025:8025
  
    # **************************************************************************
    # MySQL DB
    # **************************************************************************
    # mysql:
    #     container_name: mysql
    #     image: mysql:8
    #     environment:
    #         MYSQL_DATABASE: 'testdb'
    #         MYSQL_USER: 'test'
    #         MYSQL_PASSWORD: 'test'
    #         MYSQL_ROOT_PASSWORD: 'root'
    #     ports:
    #         - 3306:3306
    #     # volumes:
    #     #     - mysql_data:/var/lib/mysql

# ******************************************************************************
# volumes:
#     mysql_data:
